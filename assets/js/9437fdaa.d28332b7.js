"use strict";(self.webpackChunkdeadcodes=self.webpackChunkdeadcodes||[]).push([[78],{6501:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>m,contentTitle:()=>d,default:()=>f,frontMatter:()=>c,metadata:()=>u,toc:()=>T});var t=i(5893),a=i(1151),r=(i(7294),i(6234)),o=i(3504),l=i(2765);i(5687);const s=JSON.parse('[{"date":"2024-02-01","title":"Update 2.0","items":["Now uses the updated UTIL functions","Code cleanup"]},{"date":"2023-08-28","title":"Release","items":["Release"]}]'),c={title:"Soft Clay Miner",description:"Mines Soft Clay in Prifddinas",slug:"/dead-prif-clay-miner"},d=void 0,u={id:"Scripts/Prifddinas/prifClay/index",title:"Soft Clay Miner",description:"Mines Soft Clay in Prifddinas",source:"@site/docs/Scripts/Prifddinas/prifClay/index.md",sourceDirName:"Scripts/Prifddinas/prifClay",slug:"/dead-prif-clay-miner",permalink:"/dead-prif-clay-miner",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Soft Clay Miner",description:"Mines Soft Clay in Prifddinas",slug:"/dead-prif-clay-miner"},sidebar:"kbSidebar",previous:{title:"Scripts",permalink:"/category/scripts"},next:{title:"Seren Stone Miner",permalink:"/dead-prif-seren-miner"}},m={},T=[{value:"Requirements",id:"requirements",level:2},{value:"Features",id:"features",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Changelog",id:"changelog",level:2},{value:"Code",id:"code",level:2}];function g(n){const e={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.Z,{title:"Soft Clay Miner",version:"2024.02.01",skill:"Crafting"}),"\n",(0,t.jsx)(e.admonition,{type:"hidden",children:(0,t.jsx)(e.h2,{id:"requirements",children:"Requirements"})}),"\n",(0,t.jsx)(o.Z,{title:"Requirements",children:(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"https://runescape.wiki/w/Plague%27s_End",children:(0,t.jsx)(e.strong,{children:"Plague's End"})})," completed to access Prifddinas"]}),"\n"]})}),"\n",(0,t.jsx)(e.admonition,{type:"hidden",children:(0,t.jsx)(e.h2,{id:"features",children:"Features"})}),"\n",(0,t.jsxs)(o.Z,{title:"Features",children:[(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Automatically teleports to Prifddinas lodestone if too far away using ",(0,t.jsx)(e.code,{children:"lodestones.lua"}),"."]}),"\n",(0,t.jsx)(e.li,{children:"Handles random events."}),"\n"]}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-diff",children:"+ Keeps stamina above 100 while mining\n+ Showcases use of DoAction_WalkerW for long distance walking.\n+ Showcases an example implementation of how a state based script can work\n- Doesn't log back in if it gets logged out\n"})})]}),"\n",(0,t.jsx)(e.admonition,{type:"hidden",children:(0,t.jsx)(e.h2,{id:"configuration",children:"Configuration"})}),"\n",(0,t.jsxs)(o.Z,{title:"Configuration",children:[(0,t.jsxs)(e.p,{children:["Set the keycode of the bank preset you want to use [",(0,t.jsx)(e.strong,{children:"bankPresetKeycode"}),"]."]}),(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["Follow ",(0,t.jsx)(e.strong,{children:(0,t.jsx)(e.a,{href:"https://learn.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes",children:"this link"})})," to find keycodes"]}),"\n"]})]}),"\n",(0,t.jsx)(e.admonition,{type:"hidden",children:(0,t.jsx)(e.h2,{id:"changelog",children:"Changelog"})}),"\n",(0,t.jsx)(l.Z,{changes:s}),"\n",(0,t.jsx)(e.admonition,{type:"hidden",children:(0,t.jsx)(e.h2,{id:"code",children:"Code"})}),"\n",(0,t.jsx)(o.Z,{title:"Code",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lua",metastring:"showLineNumbers",children:'--[[\n# Script Name:   Dead\'s Prifddinas Soft Clay Miner\n# Description:  <Mines clay at Prifddinas.>\n# Autor:        <Dead (dea.d - Discord)>\n# Version:      <2.0>\n# Datum:        <2024.02.01>\n--]]\n\nprint("Run Priff Clay Miner.")\nlocal version = "2.0"\n\n-- INCLUDES_START\nlocal API = require("api")\nlocal LODESTONES = require("lodestones")\nlocal UTILS = require("utils")\n-- INCLUDES_END\n\nAPI.SetDrawTrackedSkills(true)\nAPI.SetDrawLogs(true)\n-- VARIABLES_START\n--highlight-next-line\nlocal bankPresetKeyCode = 0x76 -- https://learn.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes\nlocal firstRun = true\nlocal runs = 0\nlocal clayMined = 0\nlocal scriptStartTime = os.time()\nlocal runStartTime = os.time()\nlocal lastRunTime = 0\nlocal avgRunTime = 0\n\n-- The X1,X2,Y1,Y2 coords of the rectangle that we consider to be the area in which clay is interactable.\nlocal clayArea = { 2137, 2156, 3334, 3354 }\n\n-- We update this value based on the state transitions\nlocal STATE = 0\n\n-- All the states that we want to track\nlocal STATES = {\n    GOTO_CLAY = 0,\n    MINE_CLAY = 1,\n    EMPTY_BAGS = 3,\n    GOTO_PRIFF = 4\n}\n-- Draws the black background\nlocal imguiBackground = API.CreateIG_answer();\nimguiBackground.box_name = "ImguiBackground"\nimguiBackground.box_start = FFPOINT.new(20, 40, 0)\nimguiBackground.box_size = FFPOINT.new(220, 140, 0)\nimguiBackground.colour = ImColor.new(10, 13, 29)\n\nlocal ImGuiTitle = API.CreateIG_answer()\nImGuiTitle.box_start = FFPOINT.new(25, 45, 0)\nImGuiTitle.colour = ImColor.new(37, 194, 160)\nImGuiTitle.string_value = "Dead\'s Prif Clay Miner " .. version\n\n-- imgui object for the number of tips\nlocal imguiRuns = API.CreateIG_answer();\nimguiRuns.box_name = "imguiRuns";\nimguiRuns.colour = ImColor.new(37, 194, 160)\nimguiRuns.box_start = FFPOINT.new(25, 75, 0);\n\n-- imgui object for the number of clay mined\nlocal imguiClayMined = API.CreateIG_answer();\nimguiClayMined.box_name = "imguiClayMined";\nimguiClayMined.colour = ImColor.new(37, 194, 160)\nimguiClayMined.box_start = FFPOINT.new(25, 90, 0);\n\n-- imgui object for runs per hour\nlocal imguiRunsPerHr = API.CreateIG_answer();\nimguiRunsPerHr.box_name = "imguiRunsPerHr";\nimguiRunsPerHr.colour = ImColor.new(37, 194, 160)\nimguiRunsPerHr.box_start = FFPOINT.new(25, 105, 0);\n\n-- imgui object for runtime\nlocal imguiLastRunTime = API.CreateIG_answer();\nimguiLastRunTime.box_name = "imguiLastRunTime";\nimguiLastRunTime.colour = ImColor.new(37, 194, 160)\nimguiLastRunTime.box_start = FFPOINT.new(25, 120, 0);\n\n-- VARIABLES_END\n\n-- METHODS_START\n-- Updates all the values we want to track metrics for\nlocal function calculateMetrics()\n    lastRunTime = os.difftime(os.time(), runStartTime)\n    runs = runs + 1\n    clayMined = clayMined + API.InvItemcount_1(1761)\n    avgRunTime = math.floor(os.difftime(os.time(), scriptStartTime) / runs)\n    runStartTime = os.time()\n    print()\n    print("------------------------------------------------")\n    print("Runs: " .. runs)\n    print("Clay Mined: " .. clayMined)\n    print("Avg runtime: " .. avgRunTime)\n    print("Runs/Hr: " .. math.floor(3600 / avgRunTime))\n    print("Runtime: " .. math.floor(os.difftime(os.time(), scriptStartTime) / 60) .. " minutes")\nend\n\n-- Draws the imgui objects to the screen\nlocal function drawMetrics()\n    imguiClayMined.string_value = "Clay Mined: " .. clayMined\n    imguiRuns.string_value = "Trips:      " .. runs\n    imguiLastRunTime.string_value = "Last Trip:  " .. math.floor(lastRunTime) .. "s " .. " Avg: " .. avgRunTime .. "s"\n    imguiRunsPerHr.string_value = "Trips/HR:   " .. math.floor(3600 / avgRunTime)\n    ImGuiTitle.string_value = "Dead\'s Prif Clay Miner " .. version .. "\\n" .. API.ScriptRuntimeString()\n    API.DrawSquareFilled(imguiBackground)\n    API.DrawTextAt(imguiRuns)\n    API.DrawTextAt(imguiLastRunTime)\n    API.DrawTextAt(imguiRunsPerHr)\n    API.DrawTextAt(imguiClayMined)\n    API.DrawTextAt(ImGuiTitle)\nend\n\n\n-- StartUp function. It runs once at the start of the script. Do stuff like doing to where you need to be and loading equipment presets here.\nlocal function onStart()\n    print(\'on start\')\n    local priffLodestone = LODESTONES.LODESTONE.PRIFDDINAS.loc\n    local playerXYZ = API.PlayerCoord()\n    if not API.PInArea21(clayArea[1], clayArea[2], clayArea[3], clayArea[4]) and (API.Math_DistanceW(priffLodestone, playerXYZ) > 50) then\n        print(\'Not at clay area or in PRIFDDINAS\')\n        STATE = STATES.GOTO_PRIFF\n    else\n        print(\'Already near PRIFDDINAS lodestone\')\n        STATE = STATES.GOTO_CLAY\n    end\nend\n\nlocal function gotoPriff()\n    LODESTONES.Prifddinas()\n    STATE = STATES.GOTO_CLAY\nend\n\nlocal function gotoClay()\n    if not API.PInArea21(clayArea[1], clayArea[2], clayArea[3], clayArea[4]) then\n        API.DoAction_WalkerW(WPOINT.new(2154, 3340, 1))\n    end\nend\n\nlocal function mineClay()\n    local hoverProgress = API.LocalPlayer_HoverProgress()\n    math.randomseed(os.time())\n    if hoverProgress < 60 + math.random(30, 60) or not API.CheckAnim(20) then\n        API.DoAction_Object_string1(0x3a, API.OFF_ACT_GeneralObject_route0, { "Soft clay rock" }, 50, true)\n        UTILS.countTicks(2)\n        API.WaitUntilMovingEnds()\n    end\nend\n\nlocal function loadPreset()\n    API.DoAction_Object_string1(0x2e, API.OFF_ACT_GeneralObject_route1, { "Bank chest" }, 50, true)\n    UTILS.countTicks(2)\n    API.WaitUntilMovingEnds()\n    API.KeyboardPress2(bankPresetKeyCode, 50, 200)\n    UTILS.countTicks(1)\nend\n\nlocal function emptyBags()\n    calculateMetrics()\n    API.DoAction_Object_string1(0x33, API.OFF_ACT_GeneralObject_route3, { "Bank chest" }, 50, true)\n    UTILS.countTicks(2)\n    API.WaitUntilMovingEnds()\n    STATE = STATES.MINE_CLAY\nend\n\nlocal function checkStates()\n    UTILS:gameStateChecks()\n    UTILS:antiIdle()\n    if not API.PInArea21(clayArea[1], clayArea[2], clayArea[3], clayArea[4]) then\n        STATE = STATES.GOTO_CLAY\n    elseif firstRun then\n        loadPreset()\n        firstRun = false\n    elseif API.InvFull_() then\n        STATE = STATES.EMPTY_BAGS\n    else\n        STATE = STATES.MINE_CLAY\n    end\nend\n\nlocal function priffClayMiner()\n    drawMetrics()\n    API.DoRandomEvents()\n    if STATE == STATES.GOTO_PRIFF then\n        gotoPriff()\n    elseif STATE == STATES.GOTO_CLAY then\n        gotoClay()\n    elseif STATE == STATES.MINE_CLAY then\n        mineClay()\n    elseif STATE == STATES.EMPTY_BAGS then\n        emptyBags()\n    end\n    UTILS.randomSleep(600)\n    checkStates()\nend\n\n-- METHODS END\n\n-- Main Loop\nAPI.Write_LoopyLoop(true)\nAPI.logWarn("Dead\'s Priff ClayMiner Started!")\nonStart()\nwhile API.Read_LoopyLoop() do\n    priffClayMiner()\nend\n\nAPI.logWarn("Dead\'s Priff ClayMiner Done!")\nAPI.SetDrawTrackedSkills(false)\n'})})})]})}function f(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(g,{...n})}):g(n)}}}]);