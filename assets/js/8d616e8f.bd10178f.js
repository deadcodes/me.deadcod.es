"use strict";(self.webpackChunkdeadcodes=self.webpackChunkdeadcodes||[]).push([[452],{3853:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>g,contentTitle:()=>u,default:()=>I,frontMatter:()=>d,metadata:()=>c,toc:()=>m});var a=t(5893),i=t(1151),r=(t(7294),t(6234)),o=t(3504),l=t(2765);t(5687);const s=JSON.parse('[{"date":"2023-09-21","title":"Features [1.1]","items":["Added CheckForAnim to handle channeled abilities","Added longer delays before clicking next mob"]},{"date":"2023-09-21","title":"Release [1.0]","items":["Release"]}]'),d={title:"DeadSlayer",description:"General purpose mob killer",slug:"/dead-slayer"},u=void 0,c={id:"Scripts/deadslayer/index",title:"DeadSlayer",description:"General purpose mob killer",source:"@site/docs/Scripts/deadslayer/index.md",sourceDirName:"Scripts/deadslayer",slug:"/dead-slayer",permalink:"/dead-slayer",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"DeadSlayer",description:"General purpose mob killer",slug:"/dead-slayer"},sidebar:"kbSidebar",previous:{title:"DeadDigger",permalink:"/dead-digger"}},g={},m=[{value:"Features",id:"features",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Script Execution",id:"script-execution",level:2},{value:"Changelog",id:"changelog",level:2},{value:"Code",id:"code",level:2},{value:"Credits",id:"credits",level:2},{value:"Alar",id:"alar",level:4}];function h(n){const e={admonition:"admonition",code:"code",h2:"h2",h4:"h4",li:"li",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.Z,{title:"Dead Slayer",version:"2023.09",skill:"Slayer"}),"\n",(0,a.jsx)(e.admonition,{type:"hidden",children:(0,a.jsx)(e.h2,{id:"features",children:"Features"})}),"\n",(0,a.jsx)(o.Z,{title:"Features",children:(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Uses Augmented Enhanced Excalibur if found in inventory and health below 50%"}),"\n",(0,a.jsx)(e.li,{children:"Uses Elven Ritual Shard if found in inventory and prayer below 50%"}),"\n",(0,a.jsx)(e.li,{children:"Uses the Eat Food skill if available and Excalibur is on cooldown and health below 50%"}),"\n",(0,a.jsx)(e.li,{children:"If unable to heal and health falls below 20%, uses Wars Retreat teleport and exits"}),"\n"]})}),"\n",(0,a.jsx)(e.admonition,{type:"hidden",children:(0,a.jsx)(e.h2,{id:"requirements",children:"Requirements"})}),"\n",(0,a.jsx)(o.Z,{title:"Requirements",children:(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Eat Food skill on Action bar"}),"\n"]})}),"\n",(0,a.jsx)(e.admonition,{type:"hidden",children:(0,a.jsx)(e.h2,{id:"script-execution",children:"Script Execution"})}),"\n",(0,a.jsx)(o.Z,{title:"Script Execution",children:(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["Click the ",(0,a.jsx)(e.strong,{children:"[GET]"})," button to populate the dropdown with list of mobs"]}),"\n",(0,a.jsxs)(e.li,{children:["Click the ",(0,a.jsx)(e.strong,{children:"[SET]"})," button to set the target"]}),"\n",(0,a.jsxs)(e.li,{children:["Click ",(0,a.jsx)(e.strong,{children:"[Slaughter]"})," to start, it flips over to ",(0,a.jsx)(e.strong,{children:"[Pause]"})," to pause"]}),"\n",(0,a.jsxs)(e.li,{children:["Click ",(0,a.jsx)(e.strong,{children:"[Stop]"})," script to exit"]}),"\n"]})}),"\n",(0,a.jsx)(e.admonition,{type:"hidden",children:(0,a.jsx)(e.h2,{id:"changelog",children:"Changelog"})}),"\n",(0,a.jsx)(l.Z,{changes:s}),"\n",(0,a.jsx)(e.admonition,{type:"hidden",children:(0,a.jsx)(e.h2,{id:"code",children:"Code"})}),"\n",(0,a.jsx)(o.Z,{title:"Code",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",metastring:"showLineNumbers",children:'local ITEMS = {}\n\nITEMS.COMMON = {\n    995 -- gold coins\n}\n\nITEMS.RUNES = {\n    554, -- fire\n    555, -- water\n    556, -- air\n    557 -- earth\n}\n\nITEMS.HERBS = {\n    21626, -- fellstalk\n    48243, -- arbuck\n    219, -- torstol\n    217, -- dwarf weed\n    2485, -- lantadyme\n    215, -- cadantine\n    3051, -- snapdragon\n    37975, -- bloodweed\n    213, -- kwuarm\n    14836, -- wergali\n    12174, -- spirit weed\n    3049, -- toadflax\n    207, -- ranarr\n    201 -- marrentill\n}\n\nITEMS.BONES = {\n    35010, -- reinforced dragon\n    3123, -- shaikahan\n    4834, -- ourg\n    35008, -- hardened dragon\n    18832, -- frost dragon\n    30209, -- airut\n    6812, -- wyvern\n    48075, -- dinosaur\n    51858, -- dragonkin\n    4832, -- raurg\n    6729, -- dagannoth\n    4830, -- fayrg\n    2859, -- wolf\n    536, -- dragon\n    4812, -- zogre\n    530, -- bat\n    534, -- baby dragon\n    528, -- burnt\n    526, -- bones\n    3125 -- jogre\n}\n\nITEMS.ASHES = {\n    34159, -- searing\n    33260, -- tortured\n    20268, -- infernal\n    20266, -- accursed\n    20264 -- impious\n}\n\nITEMS.ARROWS = {\n    892 -- rune arrows\n}\n\nITEMS.CHARMS = {\n    12158, -- gold,\n    12159, -- green\n    12160, -- crimson\n    12163, -- blue,\n    12161 -- abyssal\n}\n\nprint("Run DeadSlayer.")\nlocal API = require("api")\nlocal UTILS = require("utils")\n\n--highlight-start\nlocal buryBones = true                                     --Set this to true to bury bones that you pickup\nlocal bonesId = ITEMS.BONES                                --IDS of the bones to bury\nlocal itemIdsToLoot = UTILS.concatenateTables(             --IDS of the items to loot\n    ITEMS.COMMON,\n    ITEMS.RUNES,\n    ITEMS.BONES,\n    ITEMS.ARROWS,\n    ITEMS.CHARMS)\n--highlight-end\n\n-- #region User Inputs\n-- #endregion\n\n-- #region Imgui Setup\nlocal imguiBackground = API.CreateIG_answer();\nimguiBackground.box_name = "imguiBackground";\nimguiBackground.box_start = FFPOINT.new(16, 20, 0);\nimguiBackground.box_size = FFPOINT.new(300, 116, 0)\n\nlocal getTargetBtn = API.CreateIG_answer();\ngetTargetBtn.box_name = "Get";\ngetTargetBtn.box_start = FFPOINT.new(16, 20, 0);\ngetTargetBtn.box_size = FFPOINT.new(50, 30, 0);\ngetTargetBtn.tooltip_text = "Populate mobs list"\n\nlocal setTargetBtn = API.CreateIG_answer();\nsetTargetBtn.box_name = "Set";\nsetTargetBtn.box_start = FFPOINT.new(60, 20, 0);\nsetTargetBtn.box_size = FFPOINT.new(50, 30, 0);\nsetTargetBtn.tooltip_text = "The script will kill this mob"\n\nlocal imguicombo = API.CreateIG_answer()\nimguicombo.box_name = "Mobs     "\nimguicombo.box_start = FFPOINT.new(100, 20, 0)\nimguicombo.stringsArr = {"a", "b"}\nimguicombo.tooltip_text = "Available mobs to target"\n\nlocal imguiCurrentTarget = API.CreateIG_answer();\nimguiCurrentTarget.box_name = "Current Target:";\nimguiCurrentTarget.box_start = FFPOINT.new(30, 50, 0);\n\nlocal imguiSlaughter = API.CreateIG_answer();\nimguiSlaughter.box_name = "Slaughter";\nimguiSlaughter.box_start = FFPOINT.new(18, 60, 0);\nimguiSlaughter.box_size = FFPOINT.new(80, 30, 0);\nimguiSlaughter.tooltip_text = "Start/Stop slaying"\n\nlocal imguiTerminate = API.CreateIG_answer();\nimguiTerminate.box_name = "Stop Script";\nimguiTerminate.box_start = FFPOINT.new(100, 60, 0);\nimguiTerminate.box_size = FFPOINT.new(100, 30, 0);\nimguiTerminate.tooltip_text = "Exit the script"\n\nlocal imguiRuntime = API.CreateIG_answer();\nimguiRuntime.box_name = "imguiRuntime";\nimguiRuntime.box_start = FFPOINT.new(30, 90, 0);\n\nAPI.DrawComboBox(imguicombo, false)\n-- #endregion\n\n-- #region Variables init\nlocal startTime = os.time()\nlocal idleTime = os.time()\nlocal targetPlaceholder = "None. Click Set Mob"\nlocal target = targetPlaceholder\nlocal runSlayer = false\nlocal targetNotFoundCount = 0\n\nlocal IDS = {\n    EXCALIBUR = 14632,\n    EXCALIBUR_AUGMENTED = 36619,\n    ELVEN_SHARD = 43358\n}\n\nlocal COLORS = {\n    BACKGROUND = ImColor.new(10, 13, 29),\n    TARGET_UNSET = ImColor.new(189, 185, 167),\n    TARGET_SET = ImColor.new(70, 143, 126),\n    SLAUGHTER = ImColor.new(84, 166, 102),\n    PAUSED = ImColor.new(238, 59, 83),\n    RUNTIME = ImColor.new(198, 120, 102)\n}\n\nimguiBackground.colour = COLORS.BACKGROUND\nimguiCurrentTarget.colour = COLORS.TARGET_UNSET\nimguiRuntime.colour = COLORS.SLAUGHTER\n-- #endregion\n\n-- #region Util functions\nlocal function log(text)\n    print(string.format("%s - %s", os.date("[%H:%M:%S]"), text))\nend\n\nlocal function antiIdleTask()\n    local timeDiff = os.difftime(os.time(), idleTime)\n    local randomTime = math.random((5 * 60) * 0.6, (5 * 60) * 0.9)\n\n    if timeDiff > randomTime then\n        API.PIdle2()\n        idleTime = os.time()\n    end\nend\n\nlocal function formatElapsedTime(start)\n    local currentTime = os.time()\n    local elapsedTime = currentTime - start\n    local hours = math.floor(elapsedTime / 3600)\n    local minutes = math.floor((elapsedTime % 3600) / 60)\n    local seconds = elapsedTime % 60\n    return string.format("Runtime: %02d:%02d:%02d", hours, minutes, seconds)\nend\n\nlocal function gameStateChecks()\n    local gameState = API.GetGameState()\n    if (gameState ~= 3) then\n        API.log(\'Not ingame with state:\', gameState)\n        API.Write_LoopyLoop(false)\n        return\n    end\n    if targetNotFoundCount > 30 then\n        imguiSlaughter.box_name = "Slaughter"\n        runSlayer = false;\n        API.Write_LoopyLoop(false)\n    end\nend\n\nlocal function terminate()\n    runSlayer = false\n    API.Write_LoopyLoop(false)\nend\n\n-- #endregion\n\n-- #region UI render functions\nlocal function populateDropdown()\n    log(\'populateDropdown\')\n    local allNPCS = API.ReadAllObjectsArray(false, 1)\n    local mobs = {}\n    if #allNPCS > 0 then\n        for _, a in pairs(allNPCS) do\n            local distance = API.Math_DistanceF(a.Tile_XYZ, API.PlayerCoordfloat())\n            a.Distance = distance;\n            if a.Id ~= 0 and a.Life > 1 and distance < 50 then\n                table.insert(mobs, a.Name)\n            end\n        end\n        local distinct = UTILS.getDistinctValues(mobs)\n        if #distinct > 0 then\n            table.sort(distinct)\n            imguicombo.stringsArr = distinct\n        end\n    end\nend\n\nlocal function setMob()\n    log(\'setMob\')\n    local currentMob = target;\n    local selected = imguicombo.stringsArr[imguicombo.int_value + 1]\n    if currentMob ~= selected then\n        target = selected;\n    end\n    imguiCurrentTarget.colour = COLORS.TARGET_SET\n    setTargetBtn.return_click = false;\nend\n\nlocal function pauseSlayer()\n    runSlayer = false\n    log("Slayer paused")\n    imguiSlaughter.return_click = false\n    imguiCurrentTarget.colour = COLORS.PAUSED\n    imguiRuntime.colour = COLORS.PAUSED\n    imguiSlaughter.box_name = "Slaughter"\nend\n\nlocal function startSlayer()\n    log("Slayer started")\n    runSlayer = true;\n    imguiCurrentTarget.colour = COLORS.SLAUGHTER\n    imguiRuntime.colour = COLORS.SLAUGHTER\n    imguiSlaughter.box_name = "Pause"\nend\n\nlocal function drawGUI()\n    if imguiTerminate.return_click then\n        terminate()\n    end\n    if imguiSlaughter.return_click then\n        if not runSlayer then\n            startSlayer()\n        end\n    else\n        if runSlayer then\n            pauseSlayer()\n        end\n    end\n    if getTargetBtn.return_click then\n        populateDropdown()\n        getTargetBtn.return_click = false\n    end\n    if not runSlayer and setTargetBtn.return_click then\n        setMob()\n    end\n    API.DrawSquareFilled(imguiBackground)\n    API.DrawBox(setTargetBtn)\n    API.DrawBox(getTargetBtn)\n    imguiCurrentTarget.string_value = "Current target:" .. target\n    imguiRuntime.string_value = formatElapsedTime(startTime) -- os.difftime(os.time(),startTime)\n    API.DrawBox(imguiSlaughter)\n    API.DrawBox(imguiTerminate)\n    API.DrawTextAt(imguiCurrentTarget)\n    API.DrawTextAt(imguiRuntime)\nend\n\n-- #endregion\n\n-- #region Script functions\n\nlocal function buryBones()\n    while API.InvItemFound2(bonesId) do\n        if not API.Read_LoopyLoop() or not API.PlayerLoggedIn() then\n            break\n        end\n        API.DoAction_Inventory2(bonesId, 0, 1, API.OFF_ACT_GeneralInterface_route)\n        UTILS.randomSleep(600)\n    end\nend\n\nlocal function loot()\n    -- print(UTILS.printTable(itemIdsToLoot))\n    if not API.InvFull_() then\n        log(\'looting\')\n\n        API.DoAction_Loot_w(itemIdsToLoot, 10, API.PlayerCoordfloat(), 10)\n        UTILS.randomSleep(600)\n        API.WaitUntilMovingEnds()\n    else\n        buryBones()\n    end\nend\n\nlocal function healthCheck()\n    local hp = API.GetHPrecent()\n    local prayer = API.GetPrayPrecent()\n    local excalCD = API.DeBuffbar_GetIDstatus(IDS.EXCALIBUR, false)\n    local excalFound = API.InvItemcount_1(IDS.EXCALIBUR_AUGMENTED)\n    local elvenCD = API.DeBuffbar_GetIDstatus(IDS.ELVEN_SHARD, false)\n    local elvenFound = API.InvItemcount_1(IDS.ELVEN_SHARD)\n    local eatFoodAB = API.GetABs_name1("Eat Food")\n    if hp < 50 then\n        if not excalCD.found and excalFound > 0 then\n            log("Using Excalibur")\n            API.DoAction_Inventory1(IDS.EXCALIBUR_AUGMENTED, 0, 2, API.OFF_ACT_GeneralInterface_route)\n            UTILS.randomSleep(800)\n        else\n            if eatFoodAB.id ~= 0 and eatFoodAB.enabled then\n                log("Eating")\n                API.DoAction_Ability_Direct(eatFoodAB, 1, API.OFF_ACT_GeneralInterface_route)\n                UTILS.randomSleep(600)\n            elseif hp < 20 then\n                log("Health critical, unable to heal, running away")\n                API.DoAction_Ability("Retreat Teleport", 1, API.OFF_ACT_GeneralInterface_route)\n                terminate()\n            end\n        end\n    end\n    if prayer < 50 and not elvenCD.found and elvenFound > 0 then\n        log("Using Elven Shard")\n        API.DoAction_Inventory1(IDS.ELVEN_SHARD, 43358, 1, API.OFF_ACT_GeneralInterface_route)\n        UTILS.randomSleep(600)\n    end\nend\n\nlocal function useSkills()\nend\n\nlocal function usePrayers()\nend\n\nlocal function hasTarget()\n    local interacting = API.ReadLpInteracting()\n    if interacting.Id ~= 0 then\n        return true\n    else\n        return false\n    end\nend\n\nlocal function getDistinctByProperty(inputTable, property)\n    local distinctValues = {}\n    local seenValues = {}\n  \n    for _, value in ipairs(inputTable) do\n      local prop = value[property]\n      if not seenValues[prop] then\n        table.insert(distinctValues, value)\n        seenValues[prop] = true\n      end\n    end\n    return distinctValues\n  end\n\n  local function filterByHealth(mobs, minHealth)\n    local result = {}\n    for _, mob in ipairs(mobs) do\n        if mob.Life >= minHealth then\n            table.insert(result, mob)\n        end\n    end\n    return result\nend\n\nlocal function KillMob(name)\n    if name == targetPlaceholder then\n        log(\'No target selected, stopping slayer\');\n        pauseSlayer()\n    end\n    if not hasTarget() and not API.CheckAnim(15) then\n        loot()\n        local attackingMe = API.OthersInteractingWithLpNPC(true, 10)\n        if #attackingMe > 0 then\n            -- if attackingMe[1].Name == target then\n            API.DoAction_NPC__Direct(0x2a, API.OFF_ACT_AttackNPC_route, attackingMe[1])\n            UTILS.randomSleep(600)\n            targetNotFoundCount = 0\n            -- end\n        else\n            local targets = API.GetAllObjArrayInteract_str({name}, 30, 1)\n            if #targets > 0 then\n                table.sort(targets, function(k1, k2)\n                    return k1.Distance < k2.Distance\n                end)\n                local alive = filterByHealth(targets,1)\n                if API.DoAction_NPC__Direct(0x2a, API.OFF_ACT_AttackNPC_route, alive[1]) then\n                    targetNotFoundCount = 0\n                    UTILS.randomSleep(600)\n                    API.WaitUntilMovingEnds()\n                end\n                -- if API.DoAction_NPC_str(0x2a, API.OFF_ACT_AttackNPC_route, { name }, 40, false, 50) then\n                --     UTILS.randomSleep(600)\n                --     API.WaitUntilMovingEnds()\n                --     targetNotFoundCount = 0\n            else\n                log(\'unable to find target\')\n                targetNotFoundCount = targetNotFoundCount + 1\n                UTILS.randomSleep(600)\n            end\n        end\n    else\n        healthCheck()\n        useSkills()\n        usePrayers()\n    end\nend\n-- #endregion\n\n-- #region Main loop\nAPI.Write_LoopyLoop(true)\npopulateDropdown()\nwhile (API.Read_LoopyLoop()) do -----------------------------------------------------------------------------------\n    API.DoRandomEvents()\n    gameStateChecks()\n    antiIdleTask()\n    drawGUI()\n    if runSlayer then\n        KillMob(target)\n    end\n    UTILS.randomSleep(300)\nend ----------------------------------------------------------------------------------\n-- #endregion\n'})})}),"\n",(0,a.jsx)(e.admonition,{type:"hidden",children:(0,a.jsx)(e.h2,{id:"credits",children:"Credits"})}),"\n",(0,a.jsx)(o.Z,{title:"Credits",children:(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.h4,{id:"alar",children:"Alar"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["Contribution - Gave us ",(0,a.jsx)(e.strong,{children:"ME"})]}),"\n"]}),"\n"]}),"\n"]})})]})}function I(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(h,{...n})}):h(n)}}}]);